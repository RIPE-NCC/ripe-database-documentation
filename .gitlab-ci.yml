# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/README.html#stages

image: $CI_REGISTRY/swe-database-team/gitlab-ci/whois-build:c6f5e5bd

variables:
  PROJECT_NAME: "ripe-database-documentation"
  ARTIFACT_NAME: "ripe-database-documentation"

include:
    - project: 'swe-database-team/gitlab-ci'
      file: '/templates/deployment-template.yml'
    - project: 'swe-database-team/gitlab-ci'
      file: '/templates/deployment-template-docker.yml'

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules
    - package-lock.json

build:
  stage: build
  script:
    - npm install --legacy-peer-deps
    - npm run docs:build
  artifacts:
    paths:
      - builds/

build-container:
  tags:
    - whois
  stage: build
  before_script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    # TODO: [FM] Delete /docs path config. Remove this line after moving to docs.db.ripe.net completely
    - sed -i '47d' docs/.vuepress/config.js
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
        docker build
        --pull
        --cache-from $CI_REGISTRY_IMAGE:latest
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
        --tag $CI_REGISTRY_IMAGE:latest
        .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:latest
